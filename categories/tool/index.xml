<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on Norwegian Wood</title>
    <link>/categories/tool/</link>
    <description>Recent content in Tool on Norwegian Wood</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Jzh</copyright>
    <lastBuildDate>Sat, 23 Jul 2022 17:27:31 +0800</lastBuildDate><atom:link href="/categories/tool/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wsl自定义安装位置</title>
      <link>/posts/2022/07/wsl-custom-installation-location/</link>
      <pubDate>Sat, 23 Jul 2022 17:27:31 +0800</pubDate>
      
      <guid>/posts/2022/07/wsl-custom-installation-location/</guid>
      <description>自定义wsl安装位置 下载wsl-ubuntu：  20.04版本：https://aka.ms/wslubuntu2004 18.04版本：https://aka.ms/wsl-ubuntu-1804  其他版本自行前往官网查找。
修改后缀名 下载后得到AppxBundle文件，将后缀名改为zip，然后解压。
解压后得到如下内容：
选择x64或ARM64的安装包均可均可，将后缀名改为zip，然后解压。
开始安装wsl-ubuntu 解压后得到如下内容：
双击ubuntu.exe，即可开始安装wsl-ubuntu。
安装完成后在该目录下得到虚拟盘：
注：虚拟盘也可能变成rootfs文件。
登录wsl 安装时会让你指定用户名和密码，这个用户是默认添加到sudoers里的。
如果想用root登录，通过sudo passwd root可以设置root密码（root刚开始没有密码），接着通过su即可登录root。
From My Blog: akynazh.
Over.</description>
    </item>
    
    <item>
      <title>Hugo通过Algolia添加站内搜索功能</title>
      <link>/posts/2022/07/hugo-adds-onsite-search-function-through-algolia/</link>
      <pubDate>Wed, 20 Jul 2022 23:46:01 +0800</pubDate>
      
      <guid>/posts/2022/07/hugo-adds-onsite-search-function-through-algolia/</guid>
      <description>注册账号并创建Index 官网链接：Algolia，注册完成后保存好ApiID和ApiKey。
接着，创建一个Index，保存好Index的名称。
数据生成以及上传Algolia 方法一：通过hugo-algolia插件的方式 一、下载hugo-algolia： npm install -g hugo-algolia
二、编写config.yaml
网站根目录下创建config.yaml，编写参数如下：
1 2 3 4 5 6  --- algolia: index: &amp;#34;{indexName}&amp;#34; key: &amp;#34;{key}&amp;#34; appID: &amp;#34;{appID}&amp;#34; ---   三、生成algolia.json
网站根目录下运行： hugo-algolia -s，即可生成 {site}/public/algolia.json，同时该数据也同步到了algolia账户下，可以去官网查看。
四、前往algolia的indices进行搜索类型的设置
可以选择按tag，category，content等内容进行搜索，并指定优先级。
方法二：通过GithubAction的方式 这里不通过插件而是通过hugo定制化地生成algolia.json，然后通过GithubAction在每次push时上传数据。
个人更推荐这样做，更好定制化且方便。同时上面方法一有个bug，对中文数据好像不支持。
一、配置algolia输出文件 1 2 3 4 5 6 7 8 9 10  outputs: home: - HTML - RSS - Algolia outputFormats: Algolia: mediaType: application/json baseName: algolia isPlainText: true   二、生成algolia.</description>
    </item>
    
    <item>
      <title>Window增加右键打开选项</title>
      <link>/posts/2021/11/add-right-click-open-option-in-window/</link>
      <pubDate>Sat, 20 Nov 2021 18:10:30 +0800</pubDate>
      
      <guid>/posts/2021/11/add-right-click-open-option-in-window/</guid>
      <description>加入注册表界面   win+R
  regedit
  增加右键操作文件选项 以vscode作为编辑文件实例 注册表页面下进入：
计算机\HKEY_CLASSES_ROOT*\shell
  新建项 Vscode
  右键Vscode并新建项command
 编辑command默认选项值为： ${vscodepath}\Code.exe %1  %1是可选的参数，这里必须要加，表示作用于该文件。
  编辑Vscode值
  编辑右键显示名称：默认值改为Open with vscode （不编辑则为新建项的名称）
  编辑右键显示图标：新建字符串值icon 添加：${vscodepath}\Code.exe (有些可以这样，但一般为ico文件)
    增加目录下右键打开选项 以window terminal作为实例 注册表页面下进入：
计算机\HKEY_CLASSES_ROOT\Directory\Background\shell
  新建项 Terminal
  右键Terminal 新建项command
 编辑command默认选项值为：${terminalpath}\wt.exe    编辑Terminal值
  编辑右键显示名称：默认值改为Open in terminal （不编辑则为新建项的名称）
  编辑右键显示图标：新建字符串值icon 添加：${terminalicon}</description>
    </item>
    
    <item>
      <title>SSH免密且免IP登录远程主机的方法以及遇到的一些问题</title>
      <link>/posts/2020/11/ssh-password-free-and-ip-free-login-methods-to-remote-hosts-and-some-problems-encountered/</link>
      <pubDate>Tue, 17 Nov 2020 17:56:03 +0800</pubDate>
      
      <guid>/posts/2020/11/ssh-password-free-and-ip-free-login-methods-to-remote-hosts-and-some-problems-encountered/</guid>
      <description>问题的提出： 我们可以通过指令：
1  ssh 用户名@IP   登录远程主机，但是每次都要输入ip和密码，有点麻烦，为了节省时间，我们需要寻求提高效率的办法！
通过了解，我们可以通过RSA，即非对称式的加密方法实现免密操作，而免IP只需要在config文件中进行配置即可。
实现免ip登录：   新建config文件
若window下操作，则在.ssh目录中新建一个名为config的文件，而linux下直接编辑ssh_config文件。
  编辑代替名以及IP，端口号，用户。
  1 2 3 4  Host 输入代替名 HostName 输入IP Port 输入端口号 User 输入用户   这样，即可通过
1  ssh 代替名   进行登录咯！
接着我们实现免密登录：  在本地生成密钥：  1  ssh-keygen   并选择生成在.ssh目录下即可，获得一把公钥和私钥。
将名字带.pub的就是公钥了。
 将公钥发给远程主机  通过命令
1  ssh-copy-id -i .ssh/公钥 用户名@IP   即可发送给远程主机。
在window10中可能出现以下错误：
1  ssh-copy-id : 无法将“ssh-copy-id”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。   则可先于命令行中运行以下代码：</description>
    </item>
    
  </channel>
</rss>
