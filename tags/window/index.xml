<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>window on Norwegian Wood</title>
    <link>/tags/window/</link>
    <description>Recent content in window on Norwegian Wood</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Jzh</copyright>
    <lastBuildDate>Fri, 24 Jun 2022 22:52:59 +0800</lastBuildDate><atom:link href="/tags/window/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Window添加命令别名的方法</title>
      <link>/posts/2022/06/how-to-add-command-alias-in-window/</link>
      <pubDate>Fri, 24 Jun 2022 22:52:59 +0800</pubDate>
      
      <guid>/posts/2022/06/how-to-add-command-alias-in-window/</guid>
      <description>前言 下面将介绍3种方法：
 CMD添加别名的方法 PowerShell添加别名的方法 通过添加环境变量的方式设置别名  CMD添加别名的方法 设置临时的别名 可以通过doskey命令实现。
1  doskey ls=echo ====== ^&amp;amp;^&amp;amp; dir /b $* ^&amp;amp;^&amp;amp; echo ======   $*表示还可能有其他命令参数，^&amp;amp;^&amp;amp;用于分开多条命令。
单纯在一个cmd窗口中使用doskey设置别名，别名只能在该窗口中使用。
设置永久的别名 可以通过将doskey命令写入bat脚本，再把脚本路径添加到注册表Autorun实现永久且所有cmd都可用的别名，具体步骤如下：
 编写脚本：  1 2 3  @echo off doskey ls=dir /b $* doskey lss=echo ====== ^&amp;amp;^&amp;amp; dir /b $* ^&amp;amp;^&amp;amp; echo ======   添加路径到注册表  在HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor下的Autorun中，将数值设为doskey命令脚本所在的路径即可。这样所有用户都可以使用设置好的别名。
也可在HKEY_CURRENT_USER下的对应位置设置，只针对当前用户设置别名。
优缺点 通过doskey的方式，挺方便的，但是在命令非常多的情况下不是很方便，同时，设置的命令还不可以在powershell下运行。
PowerShell添加别名的方法 为PowerShell设置临时的别名 1 2 3  PS C:\Users\akyna&amp;gt; set-alias escc esc PS C:\Users\akyna&amp;gt; escc .</description>
    </item>
    
    <item>
      <title>Window实用命令记录之进程与网络控制</title>
      <link>/posts/2022/04/process-and-network-control-of-window-practical-command-recording/</link>
      <pubDate>Mon, 18 Apr 2022 23:10:39 +0800</pubDate>
      
      <guid>/posts/2022/04/process-and-network-control-of-window-practical-command-recording/</guid>
      <description>进程相关 tasklist  tasklist用于查看运行的进程 findstr相当于linux的grep  1 2 3 4  PS C:\Users\akyna&amp;gt; Tasklist | findstr Code Code.exe 19184 Console 1 94,012 K Code.exe 19300 Console 1 26,324 K ......   taskkill 使用该工具按照进程 ID (PID) 或映像名称终止任务。
参数列表:
 /PID processid 指定要终止的进程的 PID。 /IM imagename 指定要终止的进程的映像名称。 /T 终止指定的进程和由它启用的子进程。 /F 指定强制终止进程。 /? 显示帮助消息。  e.g.
1 2 3  TASKKILL /IM notepad.exe TASKKILL /PID 1230 /PID 1241 /PID 1253 /T TASKKILL /F /IM cmd.</description>
    </item>
    
    <item>
      <title>Window增加右键打开选项</title>
      <link>/posts/2021/11/add-right-click-open-option-in-window/</link>
      <pubDate>Sat, 20 Nov 2021 18:10:30 +0800</pubDate>
      
      <guid>/posts/2021/11/add-right-click-open-option-in-window/</guid>
      <description>加入注册表界面   win+R
  regedit
  增加右键操作文件选项 以vscode作为编辑文件实例 注册表页面下进入：
计算机\HKEY_CLASSES_ROOT*\shell
  新建项 Vscode
  右键Vscode并新建项command
 编辑command默认选项值为： ${vscodepath}\Code.exe %1  %1是可选的参数，这里必须要加，表示作用于该文件。
  编辑Vscode值
  编辑右键显示名称：默认值改为Open with vscode （不编辑则为新建项的名称）
  编辑右键显示图标：新建字符串值icon 添加：${vscodepath}\Code.exe (有些可以这样，但一般为ico文件)
    增加目录下右键打开选项 以window terminal作为实例 注册表页面下进入：
计算机\HKEY_CLASSES_ROOT\Directory\Background\shell
  新建项 Terminal
  右键Terminal 新建项command
 编辑command默认选项值为：${terminalpath}\wt.exe    编辑Terminal值
  编辑右键显示名称：默认值改为Open in terminal （不编辑则为新建项的名称）
  编辑右键显示图标：新建字符串值icon 添加：${terminalicon}</description>
    </item>
    
    <item>
      <title>Window实用命令记录之文件操作</title>
      <link>/posts/2021/04/file-operation-recorded-by-window-utility-command/</link>
      <pubDate>Mon, 19 Apr 2021 13:48:19 +0800</pubDate>
      
      <guid>/posts/2021/04/file-operation-recorded-by-window-utility-command/</guid>
      <description>创建文件或文件夹 cmd下创建文件 1  type nul &amp;gt; test.jpg   powershell下创建文件 1  new-item test.jpg   创建文件夹 1  mkdir test   重命名文件 注意不能指定到新的路径。
1  PS D:\a\tmp\test&amp;gt; ren test.txt my.txt   移动文件 该命令也可用于重命名。
1  PS D:\a\tmp\test&amp;gt; move test.jpg mydir   复制文件和文件夹 copy无法递归复制，而xcopy可以。
1  PS D:\a\tmp\test\mydir&amp;gt; copy test.jpg test1.jpg   1 2 3 4 5 6 7 8 9 10 11 12  # mydir not empty PS D:\a\tmp\test&amp;gt; copy mydir mydir1 PS D:\a\tmp\test&amp;gt; ls mydir1 # empty PS D:\a\tmp\test&amp;gt; xcopy mydir mydir2 目标 mydir2 是文件名 还是目录名 (F = 文件，D = 目录)?</description>
    </item>
    
  </channel>
</rss>
